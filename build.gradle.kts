import java.util.*

plugins {
    `java-library`
    id("minestom.publishing-conventions")
    id("minestom.native-conventions")
    alias(libs.plugins.blossom)
    signing
    jacoco
}

group = "net.onelitefeather.microtus"

version = System.getenv("TAG_VERSION") ?: "1.5.0-SNAPSHOT"

allprojects {
    group = "net.onelitefeather.microtus"
    version = rootProject.version
    description = "Lightweight and multi-threaded Minecraft server implementation"
}

sourceSets {
    main {
        java {
            srcDir(file("src/autogenerated/java"))
        }
        blossom {
            javaSources {
                val gitCommit = System.getenv("GIT_COMMIT")
                val gitBranch = System.getenv("GIT_BRANCH")
                val group = System.getenv("GROUP")
                val artifact = System.getenv("ARTIFACT")
                property("\"&COMMIT\"", if (gitCommit == null) "null" else "\"${gitCommit}\"")
                property("\"&BRANCH\"", if (gitBranch == null) "null" else "\"${gitBranch}\"")
                property("\"&GROUP\"", if (group == null) "null" else "\"${group}\"")
                property("\"&ARTIFACT\"", if (artifact == null) "null" else "\"${artifact}\"")
            }
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks {
    jar {
        manifest {
            attributes("Automatic-Module-Name" to "net.minestom.server")
        }
    }
    withType<Javadoc> {
        (options as? StandardJavadocDocletOptions)?.apply {
            encoding = "UTF-8"

            // Custom options
            addBooleanOption("html5", true)
            addStringOption("-release", "21")
            // Links to external javadocs
            links("https://docs.oracle.com/en/java/javase/21/docs/api/")
            links("https://jd.adventure.kyori.net/api/${libs.versions.adventure.get()}/")
        }
    }
    withType<Zip> {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    withType<Test> {
        useJUnitPlatform()

        // Viewable packets make tracking harder. Could be re-enabled later.
        jvmArgs("-Dminestom.viewable-packet=false")
        jvmArgs("-Dminestom.inside-test=true")
        minHeapSize = "512m"
        maxHeapSize = "1024m"
    }
    jacocoTestReport {
        reports {
            xml.required = true
        }
    }

}

dependencies {
    // Core dependencies
    api(libs.slf4j)
    api(libs.jetbrainsAnnotations)
    api(libs.bundles.adventure)
    implementation(libs.minestomData)

    // Logging
    implementation(libs.bundles.logging)
    // Libraries required for the terminal
    implementation(libs.bundles.terminal)

    // Performance improving libraries
    implementation(libs.caffeine)
    api(libs.fastutil)
    implementation(libs.bundles.flare)
    // BStats
    api(libs.bstats.base)
    // Maven
    api(libs.maven.resolver)
    api(libs.maven.connector)
    api(libs.maven.transport.http)

    // Libraries
    api(libs.gson)
    implementation(libs.jcTools)

    // Testing
    testImplementation(libs.bundles.junit)
    testImplementation(project(":testing"))
    // Only here to ensure J9 module support for extensions and our classloaders
    testCompileOnly(libs.mockito.core)
}


